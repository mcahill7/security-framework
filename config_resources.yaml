AWSTemplateFormatVersion: 2010-09-09
Description: Codified Config Rules
Parameters:
  Ec2VolumeTagKey:
    Type: String
    Default: CostCenter

Resources:
  ConfigurationRecorderRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWSConfigRole']
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole

  ConfigurationRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: !Sub '${AWS::StackName}-ConfigurationRecorder'
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN: !GetAtt ConfigurationRecorderRole.Arn

  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      S3BucketName: !Ref ConfigStore
    DependsOn: 'ConfigStore'


  ConfigRuleForVolumeTags:
    Type: AWS::Config::ConfigRule
    Properties:
      InputParameters:
        tag1Key: CostCenter
      Scope:
        ComplianceResourceTypes:
          - AWS::EC2::Volume
      Source:
        Owner: AWS
        SourceIdentifier: REQUIRED_TAGS
    DependsOn: 'ConfigurationRecorder'

  ConfigStore:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ConfigStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigStore
      PolicyDocument:
        Version: 2012-10-17
        Id: SseAndSslPolicy
        Statement:
          -
            Sid: AWSConfigBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${ConfigStore}'
          -
            Sid: AWSConfigBucketExistenceCheck
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action: s3:ListBucket
            Resource: !Sub 'arn:aws:s3:::${ConfigStore}'
          -
            Sid: AWSConfigBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${ConfigStore}/*'
          -
            Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - !Sub 'arn:aws:s3:::${ConfigStore}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
